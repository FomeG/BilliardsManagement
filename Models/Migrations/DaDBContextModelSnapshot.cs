// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.HandleData;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(DaDBContext))]
    partial class DaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Models.Ban", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("GiaTheoGio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("GiaTheoGio");

                    b.Property<string>("LoaiBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoaiBan");

                    b.Property<string>("TenBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenBan");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("TrangThai");

                    b.HasKey("ID");

                    b.HasIndex("TenBan")
                        .IsUnique();

                    b.ToTable("Ban", (string)null);
                });

            modelBuilder.Entity("Models.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DonGia");

                    b.Property<int>("HoaDonID")
                        .HasColumnType("int")
                        .HasColumnName("HoaDonID");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("SoLuong");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ThanhTien");

                    b.HasKey("ID");

                    b.HasIndex("HoaDonID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("Models.Models.HoaDon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("KhachHangID")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<DateTime>("NgayLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayLap")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    b.Property<int?>("PhienChoiID")
                        .HasColumnType("int")
                        .HasColumnName("PhienChoiID");

                    b.Property<string>("TenKhachVangLai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TenKhachVangLai");

                    b.Property<decimal>("TongTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("TongTien");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("TrangThai");

                    b.HasKey("ID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.HasIndex("PhienChoiID");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("Models.Models.KhachHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DiaChi");

                    b.Property<bool>("GioiTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("GioiTinh");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("HoTen");

                    b.Property<DateTime>("NgayDangKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayDangKy")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("NgaySinh");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SoDienThoai");

                    b.Property<decimal>("SoTienConLai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("SoTienConLai");

                    b.HasKey("ID");

                    b.HasIndex("SoDienThoai")
                        .IsUnique();

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("Models.Models.NapGio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("KhachHangID")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<DateTime>("NgayNap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayNap")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    b.Property<decimal>("SoTienNap")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("SoTienNap");

                    b.HasKey("ID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("NapGio", (string)null);
                });

            modelBuilder.Entity("Models.Models.PhienChoi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BanID")
                        .HasColumnType("int")
                        .HasColumnName("BanID");

                    b.Property<int?>("KhachHangID")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    b.Property<string>("TenKhachVangLai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TenKhachVangLai");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ThoiGianBatDau")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2")
                        .HasColumnName("ThoiGianKetThuc");

                    b.Property<decimal?>("TienBan")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TienBan");

                    b.Property<double?>("TongThoiGian")
                        .HasColumnType("float")
                        .HasColumnName("TongThoiGian");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("TrangThai");

                    b.HasKey("ID");

                    b.HasIndex("BanID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("PhienChoi", (string)null);
                });

            modelBuilder.Entity("Models.Models.SanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("ConHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ConHang");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DonGia");

                    b.Property<byte[]>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)")
                        .HasColumnName("HinhAnh");

                    b.Property<string>("LoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoaiSanPham");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TenSanPham");

                    b.HasKey("ID");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Models.Models.TaiKhoan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("HoTen");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MatKhau");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenDangNhap");

                    b.Property<bool>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("TrangThai");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("VaiTro");

                    b.HasKey("ID");

                    b.HasIndex("TenDangNhap")
                        .IsUnique();

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("Models.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("Models.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("HoaDonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Models.Models.HoaDon", b =>
                {
                    b.HasOne("Models.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.Models.TaiKhoan", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Models.PhienChoi", "PhienChoi")
                        .WithMany("HoaDons")
                        .HasForeignKey("PhienChoiID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("PhienChoi");
                });

            modelBuilder.Entity("Models.Models.NapGio", b =>
                {
                    b.HasOne("Models.Models.KhachHang", "KhachHang")
                        .WithMany("NapGios")
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.TaiKhoan", "NhanVien")
                        .WithMany("NapGios")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Models.Models.PhienChoi", b =>
                {
                    b.HasOne("Models.Models.Ban", "Ban")
                        .WithMany("PhienChois")
                        .HasForeignKey("BanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Models.KhachHang", "KhachHang")
                        .WithMany("PhienChois")
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.Models.TaiKhoan", "NhanVien")
                        .WithMany("PhienChois")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ban");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Models.Models.Ban", b =>
                {
                    b.Navigation("PhienChois");
                });

            modelBuilder.Entity("Models.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("Models.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("NapGios");

                    b.Navigation("PhienChois");
                });

            modelBuilder.Entity("Models.Models.PhienChoi", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Models.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("Models.Models.TaiKhoan", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("NapGios");

                    b.Navigation("PhienChois");
                });
#pragma warning restore 612, 618
        }
    }
}
